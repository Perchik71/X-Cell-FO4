# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# Authors: yak3d, perchik71
# Data: 07/11/2024
# License: GPLv3

name: MSBuild

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .
  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  OG_BUILD_CONFIGURATION: "Release 10.163"
  NG_BUILD_CONFIGURATION: "Release 10.984"

permissions:
  contents: read

jobs:
  build-master:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        
      # gets the short sha to append it to the archive name
    - name: Get short SHA
      run: echo "SHORT_SHA=$("${{ github.sha }}".SubString(0, 8))" >> $env:GITHUB_ENV
      
    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v2

    - name: OG-Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.OG_BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
      
    - name: NG-Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.NG_BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

    - name: Make Bundle Directory
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: New-Item -ItemType Directory -Path "xcell-master-${{env.SHORT_SHA}}"
      
    - name: Copy Data X-CELL
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: Copy-Item -Path ".\data" "xcell-master-${{env.SHORT_SHA}}"
      
    - name: Copy Fomod X-CELL
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: Copy-Item -Path ".\fomod" "xcell-master-${{env.SHORT_SHA}}"

    - name: Make Bundle Directory
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: New-Item -ItemType Directory -Path "xcell-master-${{env.SHORT_SHA}}\build"

    - name: Copy Main X-CELL
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: Get-ChildItem -Recurse -Path ".\build" -Include "x-cell-og.dll", "x-cell-og.pdb", "x-cell-ng2.dll", "x-cell-ng2.pdb" | ForEach-Object { Copy-Item -Path $_.FullName -Destination (Join-Path "xcell-master-${{env.SHORT_SHA}}\build" $_.Name) -Force }
      
    - name: Upload X-CELL build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: xcell-master-${{env.SHORT_SHA}}
        path: "xcell-master-${{env.SHORT_SHA}}"